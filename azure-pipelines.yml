# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:  
  vmImage: 'windows-latest'
  name: default

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'EasyTest'

steps:
- task: NuGetToolInstaller@1
- task: PowerShell@2  
  displayName: NewTest  
  inputs:  
        targetType: 'inline'  
        script: |  
          
          Nuget restore
  env:
    MY_MAPPED_ENV_VAR: $(MYVARIABLEWITHDXFEED) # the recommended way to map to an env variable       

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'



- task: PowerShell@2  
  displayName: EasyTest  
  inputs:  
        targetType: 'inline'  
        script: |  
          $easyTestPath="dxT1094310v1.Module\FunctionalTests"
          $targetFrameworkFilter="*\net452\*"
          $tempFolderName="MyTempFolder"
          $targetVersionSpec="21.2.8"
          $targetVersion='v'+$targetVersionSpec.Substring(0,4)
          sqllocaldb start MSSQLLocalDB
          Nuget install DevExpress.EasyTest.TestExecutor -OutputDirectory $tempFolderName  -NoCache -version $targetVersionSpec
          New-Item -ItemType directory -Path "$tempFolderName\Bin"  
          Get-ChildItem -Path "$tempFolderName\*" -Include *.dll,*.exe -Recurse | Where {$_.FullName -like $targetFrameworkFilter -or $_.FullName -like "*\any\*"} | Copy-Item -Destination "$tempFolderName\Bin"  
          Copy-Item "C:\Program Files (x86)\Microsoft.NET\Primary Interop Assemblies\Microsoft.mshtml.dll" -Destination "$tempFolderName\Bin"  
          &"$tempFolderName\Bin\TestExecutor.$targetVersion.exe" $easyTestPath  
          Get-Content -Path $easyTestPath\TestsLog.xml  
          if(Select-String -Pattern 'Result="Failed"', 'Result="Warning"' -Path $easyTestPath\TestsLog.xml) { exit 1 }  

- task: PublishPipelineArtifact@1  
  condition: succeededOrFailed()  
  inputs:  
        targetPath: '.\dxT1094310v1.Module\FunctionalTests\'  
        artifact: 'TestsResultFiles'  
        publishLocation: 'pipeline'  
